/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.pharmacy.app.GUI.Importing;

import com.pharmacy.app.BUS.MedicalProductsBUS;
import com.pharmacy.app.BUS.PurchaseOrderBUS;
import com.pharmacy.app.BUS.PurchaseOrderDetailsBUS;
import com.pharmacy.app.BUS.SupplierBUS;
import com.pharmacy.app.DTO.MedicalProductsDTO;
import com.pharmacy.app.DTO.PurchaseOrderDTO;
import com.pharmacy.app.DTO.PurchaseOrderDetailsDTO;
import com.pharmacy.app.DTO.SessionDTO;
import com.pharmacy.app.DTO.SuplierInvoiceDetailsDTO;
import com.pharmacy.app.DTO.SupplierDTO;
import javax.swing.*;
import java.awt.*;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author LENOVO
 */
public class PurchaseOrder extends javax.swing.JPanel {
    private PurchaseOrderBUS poBUS = new PurchaseOrderBUS();
    private PurchaseOrderDetailsBUS poDeBUS = new PurchaseOrderDetailsBUS();
    private String id;

    /**
     * Creates new form PurchaseOrder
     */
    public PurchaseOrder() {
        initComponents();
        poListTbl.setDefaultEditor(Object.class, null);
        loadPOlist();
        id = poBUS.generateNextProductID();
        txtcreateID.setText(id);
        txtUserID.setText(SessionDTO.getCurrentUser().getUserID());
        txtDate.setText(LocalDate.now().toString());
        loadCbbProduct();
        loadCbbSup();
        centerTableContent(poTbl);
        centerTableContent(poListTbl);
        centerTableContent(podetailsTbl);
        if (SessionDTO.getCurrentUser().getRoleID().equals("ROLE001")) {
             jTabbedPane1.setEnabledAt(0, false);
        }    
    }

    private void loadPOlist() {
        ArrayList<PurchaseOrderDTO> poList = poBUS.getAllPO();
        DefaultTableModel model = (DefaultTableModel) poListTbl.getModel();
        model.setRowCount(0);

        for (PurchaseOrderDTO po : poList) {
            model.addRow(new Object[] {
                    po.getPoID(),
                    po.getOrderDate(),
                    po.getManagerUserID(),
                    po.getStatus()
            });
        }
    }

    private void loadPODetails(PurchaseOrderDTO selectedPO) {

        txtSup.setText(selectedPO.getSupplierID());
        txtID.setText(selectedPO.getPoID());
        txtManagerID.setText(selectedPO.getManagerUserID());
        txtDateOrder.setText(selectedPO.getOrderDate().toString());

        ArrayList<PurchaseOrderDetailsDTO> poDetailsList = poDeBUS.getAllPOdetails(selectedPO.getPoID());
        DefaultTableModel model = (DefaultTableModel) podetailsTbl.getModel();
        model.setRowCount(0);
        int stt = 1;
        for (PurchaseOrderDetailsDTO pode : poDetailsList) {
            model.addRow(new Object[] {
                    stt++,
                    pode.getProductID(),
                    pode.getProductName(),
                    pode.getQuantity()
            });
        }
    }

    private void loadCbbProduct() {
        MedicalProductsBUS proBus = new MedicalProductsBUS();
        ArrayList<MedicalProductsDTO> products = proBus.getAllProducts();
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (MedicalProductsDTO product : products) {
            model.addElement(product.getMedicineID() + " - " + product.getName());
        }
        productCbb.setModel(model);
    }

    private void loadCbbSup() {
        SupplierBUS supBus = new SupplierBUS();
        ArrayList<SupplierDTO> sups = supBus.getSupList();
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (SupplierDTO sup : sups) {
            model.addElement(sup.getName());
        }
        supCbb.setModel(model);
    }

    private void centerTableContent(JTable table) {
        // Căn giữa tiêu đề
        JTableHeader header = table.getTableHeader();
        DefaultTableCellRenderer headerRenderer = (DefaultTableCellRenderer) header.getDefaultRenderer();
        headerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

        // Căn giữa nội dung
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);

        for (int i = 0; i < table.getColumnCount(); i++) {
            table.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        createPOpnl = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        txtcreateID = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        supCbb = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtUserID = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtcreateID1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        productCbb = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        saveDeBtn = new javax.swing.JButton();
        deleteDeBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        poTbl = new javax.swing.JTable();
        jPanel14 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        savePOBtn = new javax.swing.JButton();
        clearBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel15 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        refreshBtn = new javax.swing.JButton();
        approveBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        jScrollpane = new javax.swing.JScrollPane();
        poListTbl = new javax.swing.JTable();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jPanel21 = new javax.swing.JPanel();
        jscrollpane = new javax.swing.JScrollPane();
        podetailsTbl = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtDateOrder = new javax.swing.JTextField();
        jPanel11 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        txtSup = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtManagerID = new javax.swing.JTextField();
        jPanel22 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(899, 500));
        setLayout(new java.awt.BorderLayout());

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(751, 478));

        createPOpnl.setPreferredSize(new java.awt.Dimension(751, 478));
        createPOpnl.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(557, 90));
        jPanel1.setLayout(new java.awt.BorderLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("LẬP ĐƠN ĐẶT MUA HÀNG");
        jLabel2.setPreferredSize(new java.awt.Dimension(228, 40));
        jPanel1.add(jLabel2, java.awt.BorderLayout.NORTH);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(944, 50));
        jPanel5.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 15));

        jLabel27.setText("Mã đơn:");
        jPanel5.add(jLabel27);

        txtcreateID.setEditable(false);
        txtcreateID.setPreferredSize(new java.awt.Dimension(64, 30));
        jPanel5.add(txtcreateID);

        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Nhà cung cấp:");
        jLabel11.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanel5.add(jLabel11);

        supCbb.setEditable(true);
        supCbb.setMinimumSize(new java.awt.Dimension(200, 22));
        supCbb.setPreferredSize(new java.awt.Dimension(200, 30));
        supCbb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supCbbActionPerformed(evt);
            }
        });
        jPanel5.add(supCbb);

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Ngày lập:");
        jLabel12.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanel5.add(jLabel12);

        txtDate.setEditable(false);
        txtDate.setBackground(new java.awt.Color(255, 255, 255));
        txtDate.setText("1/4/2025");
        txtDate.setBorder(null);
        txtDate.setMaximumSize(new java.awt.Dimension(90, 22));
        txtDate.setMinimumSize(new java.awt.Dimension(90, 22));
        txtDate.setPreferredSize(new java.awt.Dimension(100, 30));
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });
        jPanel5.add(txtDate);

        jLabel13.setText("Người lập:");
        jPanel5.add(jLabel13);

        txtUserID.setEditable(false);
        txtUserID.setBackground(new java.awt.Color(255, 255, 255));
        txtUserID.setText("NV001");
        txtUserID.setBorder(null);
        txtUserID.setMaximumSize(new java.awt.Dimension(90, 22));
        txtUserID.setPreferredSize(new java.awt.Dimension(100, 30));
        txtUserID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserIDActionPerformed(evt);
            }
        });
        jPanel5.add(txtUserID);

        jLabel28.setText("Mã đơn:");
        jPanel5.add(jLabel28);

        txtcreateID1.setEditable(false);
        txtcreateID1.setBackground(new java.awt.Color(255, 255, 255));
        txtcreateID1.setText("DH001");
        txtcreateID1.setBorder(null);
        txtcreateID1.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel5.add(txtcreateID1);

        jPanel1.add(jPanel5, java.awt.BorderLayout.CENTER);

        createPOpnl.add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết đơn đặt hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 12))); // NOI18N
        jPanel2.setPreferredSize(new java.awt.Dimension(450, 363));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(1077, 50));
        jPanel6.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 10));

        jLabel5.setText("Sản phẩm:");
        jPanel6.add(jLabel5);

        productCbb.setEditable(true);
        productCbb.setMinimumSize(new java.awt.Dimension(200, 22));
        productCbb.setPreferredSize(new java.awt.Dimension(400, 30));
        productCbb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productCbbActionPerformed(evt);
            }
        });
        jPanel6.add(productCbb);

        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Số lượng:");
        jLabel6.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanel6.add(jLabel6);

        txtQuantity.setPreferredSize(new java.awt.Dimension(64, 30));
        jPanel6.add(txtQuantity);

        jPanel13.add(jPanel6, java.awt.BorderLayout.NORTH);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setPreferredSize(new java.awt.Dimension(251, 50));
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        saveDeBtn.setBackground(new java.awt.Color(0, 204, 51));
        saveDeBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveDeBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveDeBtn.setText("LƯU SẢN PHẨM");
        saveDeBtn.setPreferredSize(new java.awt.Dimension(130, 30));
        saveDeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveDeBtnActionPerformed(evt);
            }
        });
        jPanel7.add(saveDeBtn);

        deleteDeBtn.setBackground(new java.awt.Color(255, 0, 0));
        deleteDeBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteDeBtn.setForeground(new java.awt.Color(255, 255, 255));
        deleteDeBtn.setText("XÓA");
        deleteDeBtn.setPreferredSize(new java.awt.Dimension(72, 30));
        deleteDeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteDeBtnActionPerformed(evt);
            }
        });
        jPanel7.add(deleteDeBtn);

        jPanel13.add(jPanel7, java.awt.BorderLayout.SOUTH);

        jPanel2.add(jPanel13, java.awt.BorderLayout.NORTH);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 202));

        poTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã thuốc", "Tên thuốc", "Số lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        poTbl.setRowHeight(30);
        jScrollPane1.setViewportView(poTbl);
        if (poTbl.getColumnModel().getColumnCount() > 0) {
            poTbl.getColumnModel().getColumn(0).setMinWidth(50);
            poTbl.getColumnModel().getColumn(0).setPreferredWidth(60);
            poTbl.getColumnModel().getColumn(0).setMaxWidth(70);
            poTbl.getColumnModel().getColumn(1).setMinWidth(70);
            poTbl.getColumnModel().getColumn(1).setPreferredWidth(100);
            poTbl.getColumnModel().getColumn(1).setMaxWidth(120);
            poTbl.getColumnModel().getColumn(3).setMinWidth(70);
            poTbl.getColumnModel().getColumn(3).setPreferredWidth(100);
            poTbl.getColumnModel().getColumn(3).setMaxWidth(120);
        }

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setPreferredSize(new java.awt.Dimension(1041, 34));
        jPanel14.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 0, 5));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("TỔNG TIỀN:");
        jLabel10.setPreferredSize(new java.awt.Dimension(80, 16));
        jPanel14.add(jLabel10);

        jTextField7.setEditable(false);
        jTextField7.setBackground(new java.awt.Color(255, 255, 255));
        jTextField7.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextField7.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel14.add(jTextField7);

        jPanel2.add(jPanel14, java.awt.BorderLayout.SOUTH);

        createPOpnl.add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setPreferredSize(new java.awt.Dimension(1051, 50));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        savePOBtn.setBackground(new java.awt.Color(0, 204, 51));
        savePOBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        savePOBtn.setForeground(new java.awt.Color(255, 255, 255));
        savePOBtn.setText("TẠO ĐƠN");
        savePOBtn.setPreferredSize(new java.awt.Dimension(100, 30));
        savePOBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePOBtnActionPerformed(evt);
            }
        });
        jPanel3.add(savePOBtn);

        clearBtn.setBackground(new java.awt.Color(255, 0, 0));
        clearBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clearBtn.setForeground(new java.awt.Color(255, 255, 255));
        clearBtn.setText("HỦY BỎ");
        clearBtn.setPreferredSize(new java.awt.Dimension(75, 30));
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });
        jPanel3.add(clearBtn);

        createPOpnl.add(jPanel3, java.awt.BorderLayout.SOUTH);

        jTabbedPane1.addTab("Tạo đơn mua", createPOpnl);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setPreferredSize(new java.awt.Dimension(1200, 760));
        jPanel15.setLayout(new java.awt.BorderLayout());

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setPreferredSize(new java.awt.Dimension(600, 760));
        jPanel16.setLayout(new java.awt.BorderLayout());

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));
        jPanel17.setPreferredSize(new java.awt.Dimension(479, 40));
        jPanel17.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 10));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("ĐƠN ĐẶT HÀNG");
        jPanel17.add(jLabel19);

        jPanel16.add(jPanel17, java.awt.BorderLayout.NORTH);

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách đơn đặt hàng\n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jPanel18.setPreferredSize(new java.awt.Dimension(480, 700));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setMinimumSize(new java.awt.Dimension(485, 100));
        jPanel8.setPreferredSize(new java.awt.Dimension(590, 70));
        jPanel8.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 15));

        refreshBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        refreshBtn.setText("TẢI LẠI");
        refreshBtn.setPreferredSize(new java.awt.Dimension(120, 30));
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });
        jPanel8.add(refreshBtn);

        approveBtn.setBackground(new java.awt.Color(0, 204, 51));
        approveBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        approveBtn.setForeground(new java.awt.Color(255, 255, 255));
        approveBtn.setText("DUYỆT ĐƠN");
        approveBtn.setEnabled(false);
        approveBtn.setPreferredSize(new java.awt.Dimension(120, 30));
        approveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBtnActionPerformed(evt);
            }
        });
        jPanel8.add(approveBtn);

        cancelBtn.setBackground(new java.awt.Color(255, 0, 0));
        cancelBtn.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelBtn.setText("HỦY ĐƠN");
        cancelBtn.setEnabled(false);
        cancelBtn.setPreferredSize(new java.awt.Dimension(90, 30));
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        jPanel8.add(cancelBtn);

        jPanel18.add(jPanel8);

        jScrollpane.setPreferredSize(new java.awt.Dimension(590, 550));

        poListTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã đơn", "Ngày tạo", "Người tạo", "Trạng thái"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        poListTbl.setPreferredSize(new java.awt.Dimension(300, 700));
        poListTbl.getTableHeader().setReorderingAllowed(false);
        poListTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                poListTblMouseClicked(evt);
            }
        });
        jScrollpane.setViewportView(poListTbl);
        if (poListTbl.getColumnModel().getColumnCount() > 0) {
            poListTbl.getColumnModel().getColumn(0).setMinWidth(30);
            poListTbl.getColumnModel().getColumn(0).setPreferredWidth(50);
            poListTbl.getColumnModel().getColumn(0).setMaxWidth(60);
            poListTbl.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel18.add(jScrollpane);

        jPanel16.add(jPanel18, java.awt.BorderLayout.CENTER);

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));
        jPanel19.setPreferredSize(new java.awt.Dimension(309, 60));
        jPanel19.setLayout(new java.awt.GridBagLayout());
        jPanel16.add(jPanel19, java.awt.BorderLayout.SOUTH);

        jPanel15.add(jPanel16, java.awt.BorderLayout.WEST);

        jPanel20.setBackground(new java.awt.Color(255, 255, 255));
        jPanel20.setPreferredSize(new java.awt.Dimension(550, 760));
        jPanel20.setLayout(new java.awt.BorderLayout());

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("CHI TIẾT ĐƠN ĐẶT HÀNG");
        jLabel21.setPreferredSize(new java.awt.Dimension(221, 40));
        jPanel20.add(jLabel21, java.awt.BorderLayout.NORTH);

        jPanel21.setBackground(new java.awt.Color(255, 255, 255));
        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chi tiết đơn đặt hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 12))); // NOI18N
        jPanel21.setPreferredSize(new java.awt.Dimension(550, 445));

        jscrollpane.setPreferredSize(new java.awt.Dimension(540, 650));

        podetailsTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Mã thuốc", "Tên thuốc", "Số lượng"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        podetailsTbl.setPreferredSize(new java.awt.Dimension(540, 650));
        jscrollpane.setViewportView(podetailsTbl);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(500, 100));
        jPanel9.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 5));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setPreferredSize(new java.awt.Dimension(500, 40));

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("Mã đơn:");
        jLabel23.setPreferredSize(new java.awt.Dimension(80, 16));
        jPanel10.add(jLabel23);

        txtID.setEditable(false);
        txtID.setBackground(new java.awt.Color(255, 255, 255));
        txtID.setBorder(null);
        txtID.setFocusable(false);
        txtID.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel10.add(txtID);

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("Ngày lập:");
        jLabel22.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanel10.add(jLabel22);

        txtDateOrder.setEditable(false);
        txtDateOrder.setBackground(new java.awt.Color(255, 255, 255));
        txtDateOrder.setBorder(null);
        txtDateOrder.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel10.add(txtDateOrder);

        jPanel9.add(jPanel10);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setPreferredSize(new java.awt.Dimension(500, 40));

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel24.setText("Nhà cung cấp:");
        jLabel24.setPreferredSize(new java.awt.Dimension(80, 16));
        jPanel11.add(jLabel24);

        txtSup.setEditable(false);
        txtSup.setBackground(new java.awt.Color(255, 255, 255));
        txtSup.setBorder(null);
        txtSup.setPreferredSize(new java.awt.Dimension(100, 30));
        txtSup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSupActionPerformed(evt);
            }
        });
        jPanel11.add(txtSup);

        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel25.setText("Người lập:");
        jLabel25.setPreferredSize(new java.awt.Dimension(100, 16));
        jPanel11.add(jLabel25);

        txtManagerID.setEditable(false);
        txtManagerID.setBackground(new java.awt.Color(255, 255, 255));
        txtManagerID.setBorder(null);
        txtManagerID.setFocusable(false);
        txtManagerID.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel11.add(txtManagerID);

        jPanel9.add(jPanel11);

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jscrollpane, javax.swing.GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jscrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 525, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel20.add(jPanel21, java.awt.BorderLayout.CENTER);

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));
        jPanel22.setPreferredSize(new java.awt.Dimension(309, 60));
        jPanel22.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 15, 10));
        jPanel20.add(jPanel22, java.awt.BorderLayout.SOUTH);

        jPanel15.add(jPanel20, java.awt.BorderLayout.CENTER);

        jScrollPane4.setViewportView(jPanel15);

        jTabbedPane1.addTab("Danh sách đơn đặt hàng", jScrollPane4);

        add(jTabbedPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void productCbbActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_productCbbActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_productCbbActionPerformed

    private void txtQuantityActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtQuantityActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtQuantityActionPerformed

    private void savePOBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_savePOBtnActionPerformed
        String[] options = { "Xác nhận", "Hủy bỏ" };
        int choice = JOptionPane.showOptionDialog(
                null,
                "Bạn có chắc muốn tạo đơn đặt này không?",
                "Xác nhận tạo đơn đặt hàng",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);

        if (choice == 0) {
            try {
                System.out.println("Bắt đầu quá trình tạo đơn đặt hàng...");

                // Lấy thông tin nhà cung cấp
                SupplierBUS supBUS = new SupplierBUS();
                String selectedName = (String) supCbb.getSelectedItem();
                System.out.println("Nhà cung cấp được chọn: " + selectedName);

                SupplierDTO selectedSupplier = supBUS.getSupplierByName(selectedName);
                if (selectedSupplier == null) {
                    System.out.println("Không tìm thấy thông tin nhà cung cấp!");
                    JOptionPane.showMessageDialog(this, "Không tìm thấy thông tin nhà cung cấp!", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                String supplierId = selectedSupplier.getId();
                System.out.println("ID nhà cung cấp: " + supplierId);

                // Tạo đối tượng PurchaseOrderDTO
                String poId = txtcreateID.getText();
                String managerId = txtUserID.getText();
                String dateText = txtDate.getText();

                System.out.println("Thông tin đơn hàng:");
                System.out.println(" - ID đơn hàng: " + poId);
                System.out.println(" - ID người quản lý: " + managerId);
                System.out.println(" - Ngày tạo: " + dateText);

                LocalDate orderDate;
                try {
                    orderDate = LocalDate.parse(dateText);
                } catch (Exception e) {
                    System.out.println("Lỗi định dạng ngày: " + e.getMessage());
                    JOptionPane.showMessageDialog(this, "Định dạng ngày không hợp lệ!", "Lỗi",
                            JOptionPane.ERROR_MESSAGE);
                    return;
                }

                PurchaseOrderDTO poNew = new PurchaseOrderDTO(
                        poId,
                        managerId,
                        supplierId,
                        orderDate,
                        "Chưa duyệt",
                        "");

                // Lấy chi tiết đơn hàng từ bảng
                ArrayList<PurchaseOrderDetailsDTO> details = new ArrayList<>();
                DefaultTableModel model = (DefaultTableModel) poTbl.getModel();
                System.out.println("Số dòng chi tiết: " + model.getRowCount());

                for (int i = 0; i < model.getRowCount(); i++) {
                    try {
                        String productId = model.getValueAt(i, 1).toString();
                        String quantityStr = model.getValueAt(i, 3).toString();

                        System.out.println("Chi tiết dòng " + i + ":");
                        System.out.println(" - ID sản phẩm: " + productId);
                        System.out.println(" - Số lượng: " + quantityStr);

                        int quantity = Integer.parseInt(quantityStr);
                        PurchaseOrderDetailsDTO detail = new PurchaseOrderDetailsDTO(
                                poId,
                                productId,
                                quantity);
                        details.add(detail);
                    } catch (Exception e) {
                        System.out.println("Lỗi khi xử lý dòng " + i + ": " + e.getMessage());
                        JOptionPane.showMessageDialog(this, "Lỗi dữ liệu ở dòng " + (i + 1) + "!", "Lỗi",
                                JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }

                poNew.setPoDetails(details);

                System.out.println("Đang gửi dữ liệu đến BUS...");
                boolean result = poBUS.addPO(poNew);

                if (result) {
                    System.out.println("Tạo đơn hàng thành công!");
                    JOptionPane.showMessageDialog(this, "Tạo đơn đặt hàng thành công!", "Thành công",
                            JOptionPane.INFORMATION_MESSAGE);
                } else {
                    System.out.println("Tạo đơn hàng thất bại (BUS trả về false)");
                    JOptionPane.showMessageDialog(this, "Tạo đơn đặt hàng thất bại. Vui lòng kiểm tra lại dữ liệu.",
                            "Thất bại", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                System.out.println("Lỗi không mong muốn: " + e.getMessage());
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi không mong muốn: " + e.getMessage(), "Lỗi",
                        JOptionPane.ERROR_MESSAGE);
            }
        } else {
            System.out.println("Người dùng đã hủy thao tác");
        }
    }// GEN-LAST:event_savePOBtnActionPerformed

    private void saveDeBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveDeBtnActionPerformed
        String selectedValue = (String) productCbb.getSelectedItem();

        // Kiểm tra đã chọn sản phẩm chưa
        if (selectedValue == null || selectedValue.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // Kiểm tra số lượng
        String quantityText = txtQuantity.getText().trim();
        if (quantityText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập số lượng", "Thông báo", JOptionPane.WARNING_MESSAGE);
            txtQuantity.requestFocus(); // Đặt con trỏ vào ô số lượng
            return;
        }

        // Kiểm tra số lượng có phải là số dương
        try {
            int quantity = Integer.parseInt(quantityText);
            if (quantity <= 0) {
                JOptionPane.showMessageDialog(this, "Số lượng phải lớn hơn 0", "Lỗi", JOptionPane.ERROR_MESSAGE);
                txtQuantity.requestFocus();
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Số lượng phải là số nguyên", "Lỗi", JOptionPane.ERROR_MESSAGE);
            txtQuantity.requestFocus();
            return;
        }

        // Tách chuỗi sản phẩm
        String[] parts = selectedValue.split(" - ");
        if (parts.length < 2) {
            JOptionPane.showMessageDialog(this, "Dữ liệu sản phẩm không hợp lệ", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String productName = parts[1];
        String productId = parts[0];
        DefaultTableModel tableModel = (DefaultTableModel) poTbl.getModel();

        // Kiểm tra trùng lặp
        for (int i = 0; i < tableModel.getRowCount(); i++) {
            String idInTable = tableModel.getValueAt(i, 1).toString();
            if (idInTable.equals(productId)) {
                JOptionPane.showMessageDialog(this, "Sản phẩm đã có trong danh sách", "Thông báo",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
        }

        // Thêm vào bảng
        int stt = tableModel.getRowCount() + 1;
        tableModel.addRow(new Object[] { stt, productId, productName, txtQuantity.getText() });

        // Reset các trường
        productCbb.setSelectedIndex(-1);
        txtQuantity.setText("");
        productCbb.requestFocus();
    }// GEN-LAST:event_saveDeBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_cancelBtnActionPerformed
        String[] options = { "Xác nhận", "Hủy bỏ" };
        int choice = JOptionPane.showOptionDialog(
                null,
                "Bạn có chắc chắn muốn hủy đơn đặt hàng này không?",
                "Xác nhận hủy đơn đặt hàng",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);
        if (choice == 0) {
            // xác nhận
            poBUS.deletePO(txtID.getText());
        } else {
            // hủy
        }
    }// GEN-LAST:event_cancelBtnActionPerformed

    private void supCbbActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_supCbbActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_supCbbActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtDateActionPerformed

    private void txtUserIDActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtUserIDActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_txtUserIDActionPerformed

    private void approveBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_approveBtnActionPerformed
        String[] options = { "Xác nhận", "Hủy bỏ" };
        int choice = JOptionPane.showOptionDialog(
                null,
                "Bạn có chắc chắn muốn phê duyệt đơn hàng này không?",
                "Xác nhận phê duyệt",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,
                options,
                options[0]);
        if (choice == 0) {
            poBUS.approvePO(txtID.getText());
        } else {
            // hủy
        }
    }// GEN-LAST:event_approveBtnActionPerformed

    private void poListTblMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_poListTblMouseClicked
        if (evt.getButton() == MouseEvent.BUTTON1) {
            int row = poListTbl.getSelectedRow();
            if (row >= 0) {
                String ID = poListTbl.getValueAt(row, 0).toString();

                PurchaseOrderDTO selectedPO = poBUS.getPOByID(ID);
                loadPODetails(selectedPO);

                cancelBtn.setEnabled(true);
                if (SessionDTO.getCurrentUser().getRoleID().equals("ROLE001")) {
                    approveBtn.setEnabled(true);
                }
            }
        } // GEN-LAST:event_poListTblMouseClicked
    }

    private void txtSupActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_txtSupActionPerformed

    }// GEN-LAST:event_txtSupActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_refreshBtnActionPerformed
        loadPOlist();
    }// GEN-LAST:event_refreshBtnActionPerformed

    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_clearBtnActionPerformed
        ((DefaultTableModel) poTbl.getModel()).setRowCount(0);
    }// GEN-LAST:event_clearBtnActionPerformed

    private void deleteDeBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteDeBtnActionPerformed
        if (poTbl.getSelectedRow() != -1) {
            ((DefaultTableModel) poTbl.getModel()).removeRow(poTbl.getSelectedRow());
        }
        for (int i = 0; i < poTbl.getRowCount(); i++) {
            poTbl.getModel().setValueAt(i + 1, i, 0); // Cột 0 là STT
        }

    }// GEN-LAST:event_deleteDeBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton clearBtn;
    private javax.swing.JPanel createPOpnl;
    private javax.swing.JButton deleteDeBtn;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollpane;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JScrollPane jscrollpane;
    private javax.swing.JTable poListTbl;
    private javax.swing.JTable poTbl;
    private javax.swing.JTable podetailsTbl;
    private javax.swing.JComboBox<String> productCbb;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton saveDeBtn;
    private javax.swing.JButton savePOBtn;
    private javax.swing.JComboBox<String> supCbb;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDateOrder;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtManagerID;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSup;
    private javax.swing.JTextField txtUserID;
    private javax.swing.JTextField txtcreateID;
    private javax.swing.JTextField txtcreateID1;
    // End of variables declaration//GEN-END:variables
}