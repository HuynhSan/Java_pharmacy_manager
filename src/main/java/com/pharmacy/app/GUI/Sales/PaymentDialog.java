/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.pharmacy.app.GUI.Sales;

import com.pharmacy.app.BUS.SalesInvoiceBUS;
import com.pharmacy.app.DTO.CartItemDTO;
import com.pharmacy.app.DTO.SalesInvoiceDTO;
import java.awt.Frame;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author Giai Cuu Li San
 */
public class PaymentDialog extends javax.swing.JDialog {

    private Map<String, CartItemDTO> cartItems;
    private String userID;
    private String customerID;
    private HomeSales homesales;
    private BigDecimal totalProductPrice;
    private int totalProduct;
    BigDecimal totalDiscount;
    BigDecimal subTotal;
    
    
    SalesInvoiceBUS salesInvoiceBUS = new SalesInvoiceBUS();
    /**
     * Creates new form PaymentDialog
     */
    public PaymentDialog(java.awt.Frame parent, boolean modal, HomeSales homesales, BigDecimal totalProductPrice, BigDecimal totalDiscount, BigDecimal subTotal, Map<String, CartItemDTO> cartItemsMap, String userId, String customerId, String promoId) {
        super(parent, modal);
        initComponents();
        
        // Gán dữ liệu truyền vào
        this.cartItems = cartItemsMap;
        this.userID = userId;
        this.customerID = customerId;
        this.totalProductPrice = totalProductPrice;
        this.totalDiscount = totalDiscount;
        this.subTotal = subTotal;
        this.totalProduct = homesales.calculateTotalProduct();


        System.out.println(userId);        
        System.out.println(customerId);
//        System.out.println(newSalesInvoiceId);

        
        showHashMap(cartItems);
        
        // Hiển thị dữ liệu lên các trường trong dialog
        txtTotalProductPrice.setText(totalProductPrice.toString());
        txtDiscountAmount.setText(totalDiscount.toString());
        txtFinalTotal.setText(subTotal.toString());
        System.out.println(promoId);
        

    }
    
        public void showHashMap(Map<String, CartItemDTO> cartItems){
        // Sau khi thêm vào cartPanel, thêm đoạn này để debug
        System.out.println("==> Giỏ hàng thanh toán:");
        for (Map.Entry<String, CartItemDTO> entry : cartItems.entrySet()) {
            CartItemDTO cartitem = entry.getValue();
            System.out.println("Batch ID: " + cartitem.getBatchId()
               + ", Product ID: " + cartitem.getProductId()
               + ", Tên: " + cartitem.getName()
               + ", SL: " + cartitem.getQuantityFromSpinner()
               + ", Giá gốc: " + cartitem.getSellPrice()
               + ", Tiền khuyến mãi: " + cartitem.getDiscountAmount()
               + ", Giá sau KM: " + cartitem.getFinalPrice());
        }
        System.out.println("------------------------------");

    }
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        lblTotalAmount = new javax.swing.JLabel();
        txtTotalProductPrice = new javax.swing.JTextField();
        txtDiscountAmount = new javax.swing.JTextField();
        lblDiscountAmount = new javax.swing.JLabel();
        lblFinalTotal = new javax.swing.JLabel();
        txtFinalTotal = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btnCancel = new javax.swing.JButton();
        btnConfirmPayment = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Thanh Toán");
        setMinimumSize(new java.awt.Dimension(400, 300));
        setModal(true);
        setResizable(false);
        getContentPane().setLayout(new java.awt.FlowLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(500, 300));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        lblTotalAmount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTotalAmount.setText("Tổng thành tiền");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(lblTotalAmount, gridBagConstraints);

        txtTotalProductPrice.setEnabled(false);
        txtTotalProductPrice.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(7, 20, 7, 15);
        jPanel1.add(txtTotalProductPrice, gridBagConstraints);

        txtDiscountAmount.setEditable(false);
        txtDiscountAmount.setEnabled(false);
        txtDiscountAmount.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(7, 20, 7, 15);
        jPanel1.add(txtDiscountAmount, gridBagConstraints);

        lblDiscountAmount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDiscountAmount.setText("Tiền khuyến mãi");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(lblDiscountAmount, gridBagConstraints);

        lblFinalTotal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFinalTotal.setText("Tổng tiền");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(lblFinalTotal, gridBagConstraints);

        txtFinalTotal.setEnabled(false);
        txtFinalTotal.setPreferredSize(new java.awt.Dimension(200, 25));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(7, 20, 7, 15);
        jPanel1.add(txtFinalTotal, gridBagConstraints);

        jPanel2.setPreferredSize(new java.awt.Dimension(300, 30));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 20, 5));

        btnCancel.setBackground(new java.awt.Color(255, 0, 0));
        btnCancel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Hủy");
        btnCancel.setPreferredSize(new java.awt.Dimension(80, 25));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel2.add(btnCancel);

        btnConfirmPayment.setBackground(new java.awt.Color(0, 204, 51));
        btnConfirmPayment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnConfirmPayment.setForeground(new java.awt.Color(255, 255, 255));
        btnConfirmPayment.setText("Xác nhận");
        btnConfirmPayment.setPreferredSize(new java.awt.Dimension(90, 25));
        btnConfirmPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmPaymentActionPerformed(evt);
            }
        });
        jPanel2.add(btnConfirmPayment);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel1.add(jPanel2, gridBagConstraints);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblTitle.setText("XÁC NHẬN THANH TOÁN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 13, 0);
        jPanel1.add(lblTitle, gridBagConstraints);

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnConfirmPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmPaymentActionPerformed
        handleConfirm();
    }//GEN-LAST:event_btnConfirmPaymentActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConfirmPayment;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblDiscountAmount;
    private javax.swing.JLabel lblFinalTotal;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotalAmount;
    private javax.swing.JTextField txtDiscountAmount;
    private javax.swing.JTextField txtFinalTotal;
    private javax.swing.JTextField txtTotalProductPrice;
    // End of variables declaration//GEN-END:variables

    private void handleConfirm() {
        // 1. Tạo mã hoá đơn mới
        String invoiceId = salesInvoiceBUS.generateNewId();  // Ví dụ: HD001, HD002,...

        // 2. Lấy ngày tạo
        LocalDate today = LocalDate.now();

        System.out.println("===== THÔNG TIN HÓA ĐƠN =====");
        System.out.println("Mã hóa đơn: " + invoiceId);
        System.out.println("Mã nhân viên (userID): " + userID);
        System.out.println("Mã khách hàng (customerID): " + customerID);
        System.out.println("Tổng số lượng sản phẩm: " + totalProduct);
        System.out.println("Tổng tiền sản phẩm: " + totalProductPrice);
        System.out.println("Tổng khuyến mãi: " + totalDiscount);
        System.out.println("Thành tiền: " + subTotal);
        System.out.println("Ngày tạo: " + today);
        System.out.println("=============================");

        
        // 4. Tạo hóa đơn DTO
        SalesInvoiceDTO invoiceDTO = new SalesInvoiceDTO(invoiceId, this.userID, this.customerID, totalProduct, totalProductPrice, totalDiscount, subTotal, today);

        // 5. Gọi BUS lưu hoá đơn
//        boolean success = invoiceBUS.insertInvoice(invoice);
//
//        // 6. Lưu chi tiết hoá đơn nếu hoá đơn được lưu thành công
//        if (success) {
//            for (CartItemDTO item : cartItems.values()) {
//                InvoiceDetailDTO detail = new InvoiceDetailDTO(
//                    invoiceId,
//                    item.getProductId(),
//                    item.getQuantity(),
//                    item.getTotalPrice()
//                );
//                invoiceDetailBUS.insertInvoiceDetail(detail);
//            }
//
//            JOptionPane.showMessageDialog(this, "Thanh toán thành công!");
//            this.dispose(); // Đóng dialog
//        } else {
//            JOptionPane.showMessageDialog(this, "Lỗi khi lưu hoá đơn!", "Lỗi", JOptionPane.ERROR_MESSAGE);
//        }
    }

}
